---
title: "Introdução ao Google Earth Engine"
author: "<br> [Maurício Vancine](https://mauriciovancine.github.io/) • [lab.exe/Unicamp](https://www.mathiasmpires.net.br/)"
date: "Novembro de 2024"
date-format: long
format: 
  revealjs:
    theme: [custom.scss]
    lang: pt
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
    chalkboard: true
    logo: https://earthengine.google.com/static/images/earth-engine-logo.png
    execute:
      echo: true
      eval: false
      warning: false
      message: false
editor: source
---

## Maurício Vancine 

::: columns
::: {.column width="40%"}
<br><br>
<center>
![](img/avatar.png)
</center>
:::

::: {.column width="60%"}

- Ecólogo e Doutor em Ecologia - Unesp
- Pós-Doc (Mathias Pires - Amazônia)
- Ecologia Espacial
- Modelagem Ecológica
- Análise de Dados Ecológicos e Geoespaciais
- Ecologia e Conservação de Anfíbios
- *Open source* [R, QGIS, GRASS GIS, GNU/Linux, ...]

:::
:::

## Material

Todo o material está disponível no [GitHub](https://github.com/mauriciovancine/workshop-gee)

<center>
<img src="img/github_logo.png" style="width:50%"/>
</center>

:::footer
[GitHub](https://github.com/mauriciovancine/workshop-qgis)
:::

## IMPORTANTE!!!

**Estamos num espaço seguro e amigável**

- Sintam-se à vontade para me interromper e tirar dúvidas

<center>
<img src="img/general_starwars_teamwork.png" style="width:50%"/>
</center>

::: footer
[\@allison_horst](https://twitter.com/allison_horst)
:::

## Google Earth Engine (GEE) {.smaller}

- **Plataforma em nuvem** para análise de dados geoespaciais
- Fornece **conjuntos de dados** hospedados na nuvem prontos para uso e um **grande conjunto de servidores**
- **Inclui**: catálogo de dados públicos, infraestrutura de computação, API (*Application Programming Interface*) geoespacial e servidor de aplicativos interativos

![](img/gee_logo_bg.png){.absolute width=10% right=470 top=335}
<center>
<img src="img/gee_01.png" style="width:60%"/>
</center>

:::footer
[Welcome to Google Earth Engine](https://developers.google.com/earth-engine)
:::

## API

- **Comunicação** com os servidores do *Earth Engine*
- **Linguagens**: JavaScript (JS) e Python

<center>
<img src="img/api.png" style="width:85%"/>
</center>

:::footer
[The Ultimate Guide to API Development: Types, Examples, and Best Practices](https://www.mindinventory.com/blog/ultimate-guide-to-api-development/)
:::

## API

<center>
<img src="img/gee_completo.png" style="width:100%"/>
</center>

:::footer
[Mapas Abertos](https://mapasabertos.com/2021/03/30/o-google-earth-engine/)
:::

## JavaScript

- JavaScript do *Earth Engine* é "fácil de usar" e é acessado pelo **Editor de Código** on-line
- Permite **compartilhar** código e inclui **ferramentas** para gráficos, mapas e aplicações web

<center>
<img src="img/javascript_logo.png" style="width:30%"/>
</center>

:::footer
[JavaScript](https://pt.wikipedia.org/wiki/JavaScript)
:::

## Google Cloud

**Cloud project**

<center>
<img src="img/gee_google_cloud01.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**1. Obtenha um projeto**

<center>
<img src="img/gee_google_cloud02.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**1. Obtenha um projeto**

<center>
<img src="img/gee_google_cloud03.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**1. Obtenha um projeto**

<center>
<img src="img/gee_google_cloud04.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**1. Obtenha um projeto**

<center>
<img src="img/gee_google_cloud05.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**1. Obtenha um projeto**

<center>
<img src="img/gee_google_cloud06.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**2. Habilite a API do Earth Engine**

<center>
<img src="img/gee_google_cloud07.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**2. Habilite a API do Earth Engine**

<center>
<img src="img/gee_google_cloud08.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

## Google Cloud

**2. Habilite a API do Earth Engine**

<center>
<img src="img/gee_google_cloud09.png" style="width:100%"/>
</center>

:::footer
[Google Cloud](https://console.cloud.google.com)
:::

# Acho que tudo certo...

## Editor de código

<center>
<img src="img/gee_code_editor01.png" style="width:93%"/>
</center>

:::footer
[Welcome to Google Earth Engine](https://developers.google.com/earth-engine)
:::

## Editor de código

<br>
<center>
<img src="img/gee_code_editor02.png" style="width:100%"/>
</center>

:::footer
[Mapas Abertos](https://mapasabertos.com/2021/03/30/o-google-earth-engine/)
:::

## Editor de código

<br>
<center>
<img src="img/gee-code-editor-01_up.png" style="width:100%"/>
</center>

:::footer
[AWOC2020 GEE Training](https://github.com/npec/AWOC2020-GEE-Training)
:::

## Editor de código

<br>
<center>
<img src="img/gee-code-editor-02_up.png" style="width:100%"/>
</center>

:::footer
[AWOC2020 GEE Training](https://github.com/npec/AWOC2020-GEE-Training)
:::

## Editor de código

<br>
<center>
<img src="img/gee-code-editor-03_up.png" style="width:100%"/>
</center>

:::footer
[AWOC2020 GEE Training](https://github.com/npec/AWOC2020-GEE-Training)
:::

## Editor de código

<br>
<center>
<img src="img/gee-code-editor-04_up.png" style="width:100%"/>
</center>

:::footer
[AWOC2020 GEE Training](https://github.com/npec/AWOC2020-GEE-Training)
:::

## Editor de código

<br>
<center>
<img src="img/gee-code-editor-05_up.png" style="width:100%"/>
</center>

:::footer
[AWOC2020 GEE Training](https://github.com/npec/AWOC2020-GEE-Training)
:::

## Editor de código

**Google Earth Engine Autosave**

- Salva automaticamente o código no GEE, evitando perda ao fechar a aba ou em caso de travamento
- Armazena o código localmente e o restaura ao reabrir o arquivo, usando o caminho absoluto para evitar conflitos

<br>
<center>
<img src="img/chrome_ext_save.png" style="width:20%"/>
</center>

:::footer
[Google Earth Engine Autosave](https://chromewebstore.google.com/detail/google-earth-engine-autos/clmadhnfadeiakdnohhnabdnabikpcja)
:::

## Editor de código

**Open Earth Engine extension**

- Adiciona recursos úteis ao editor de código do GEE

::: columns
::: {.column width="50%"}
::: {style="font-size: 40%;"}
  - **modo noturno**
  - **permite definir a fonte (incluindo o tamanho) do editor de código**
  - **botão para upload de imagens via arrastar e soltar usando manifests**
  - **botões (setas) para inserir a assinatura da função da documentação no editor de código**
  - cache para a OEEL (Open Earth Engine Library)
  - abre o editor de código ao clicar no ícone (ou a documentação da OEEL se o editor já estiver aberto)
  - permite exportação automática
  - cmd+S para salvar no Mac
  - imagens do PlanetLab (busca / pedido / transferência para o GEE) usando a API do Planet
  - verifica se os assets são compartilháveis ao "obter link"
  - botão para executar todas as tarefas
  - suporte para Plotly no editor de código e no EE App (incluindo eventos)
  - abre o script em uma nova aba ao dar duplo clique
  - terminal para depuração
:::
:::

::: {.column width="50%"}
::: {style="font-size: 40%;"}
  - copia JSON ao dar duplo clique no botão JSON
  - console com cabeçalho vermelho para alertas de crash
  - adiciona interface Python
  - link para documentação externa
  - recurso de compartilhamento de código em tempo real
:::
:::
:::

![](img/chrome_ext_gee.png){.absolute width=30% right=150 top=400}

:::footer
[Open Earth Engine extension](https://chromewebstore.google.com/detail/open-earth-engine-extensi/dhkobehdekjgdahfldleahkekjffibhg)
:::

## Editor de código

**Open Earth Engine extension**

<center>
<img src="img/chrome_ext_gee_02.png" style="width:80%"/>
</center>

:::footer
[Open Earth Engine extension](https://chromewebstore.google.com/detail/open-earth-engine-extensi/dhkobehdekjgdahfldleahkekjffibhg)
:::

## Editor de código

**Open Earth Engine extension**

<center>
<img src="img/chrome_ext_gee_03.png" style="width:80%"/>
</center>

:::footer
[Open Earth Engine extension](https://chromewebstore.google.com/detail/open-earth-engine-extensi/dhkobehdekjgdahfldleahkekjffibhg)
:::

## Rodando os códigos

- Clique em `Run` ou `ctrl + alt + enter`

```{r}
print('Hello World');
```

<center>
<img src="img/gee_scripts01.png" style="width:60%"/>
</center>

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Salvando os scripts

- Clique em `Save` ou `ctrl + s`
- **IMPORTANTE**: O salvamento não é automático!

<center>
<img src="img/gee_scripts02.png" style="width:60%"/>
</center>

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Salvando os scripts

**Nome de usuário**

::: {style="font-size: 70%;"}
- Na primeira vez de uso do *Code Editor* é escolhido um **nome de usuário** do *Earth Engine*
- Esse nome será usado para **criar a pasta de scripts** na nuvem
- **Recomendação**: usuário da conta Google, pois o mesmo não pode ser alterado
:::

<center>
<img src="img/gee_scripts03.png" style="width:33%"/>
</center>

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Salvando os scripts

**Repositório**

- Depois que a pasta *home* é criada, será solicitado a criação de um **repositório** (pasta)
- Repositório ajudam **organizar** e **compartilhar** scripts

<center>
<img src="img/gee_scripts04.png" style="width:35%"/>
</center>

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Salvando os scripts

**Scripts**

::: {style="font-size: 70%;"}
- Scripts são **salvos** no repositório
- Script aparecerá no **painel do gerenciador** de scripts
- Scripts são **salvos na nuvem** e estarão **disponíveis** quando abrir o *Code Editor*
:::

![](img/gee_scripts05.png){.absolute width=50% right=550 top=350}
![](img/gee_scripts06.png){.absolute width=60% right=-90 top=355}

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

# Dúvidas?

## Introdução ao JavaScript {.smaller}

- Criado em 1995, atualmente o JS é uma das linguagens mais **usadas** e **populares**
- Linguagem **interpretada** (lido linha a linha) e de **alto nível** (próximo ao que falamos)
- HTML, CSS e JS formam a base da internet
- **Principal função do JS**: deixar as páginas de internet dinâmicas

![](img/js_stack.webp){.absolute width=60% right=400 top=300}
![](img/html_css_js.avif){.absolute width=60% right=-100 top=300}

:::footer
[What are the differences between CSS, HTML and JavaScript?](https://www.keentodesign.com.au/difference-between-css-html-and-javascript/)
:::

## Introdução ao JavaScript

**Comentários**

- Texto usado para explicar o código ou deixar uma nota
- Sempre adicionar comentários explicando cada etapa
- `//` ou `ctrl + /` para uma ou mais linhas
- `ctrl + /` em linhas comentadas, descomenta-as

```{ojs}
// This is a comment!
print('Hello World');
```

## Introdução ao JavaScript

**Comentários em múltiplas linhas**

- `/**` início
- Comentários
- `**/` fim

```{ojs}
/** 
This is a comment in multiple lines!
Nothing here will be executed
**/
print('Hello World');
```

## Introdução ao JavaScript

**Variáveis**

::: {style="font-size: 80%;"}
- Usadas para **armazenar** valores de dados
- **Sintaxe**: palavra-chave `var`, nome da variável, igual e valor atribuído
- Cada declaração do seu script deve terminar com um **ponto e vírgula** (opcional)
- Variáveis recebem o **tipo** automaticamente dependendo do que foi atribuído (e.g. tipo `string` para texto e `numeric` para números)
:::

```{r eval=FALSE}
var city = 'San Francisco';
print(city);

var population = 873965;
print(population);
```

## Introdução ao JavaScript

**Listas**

::: {style="font-size: 70%;"}
- Armazenam **múltiplos valores** em uma única variável
- **Sintaxe**: palavra-chave `var`, nome da variável, igual e colchetes `[]`, elementos separados por vírgulas
- **Console**: aparece com uma **seta expansora** (`▷`), que ao clicar se **expande**, mostrarando seu
conteúdo
- O número à esquerda de cada item indica seu **índice** (posição na lista), permitindo **se refirir** a cada item usando um **valor numérico**
- **ATENÇÃO**: índices começam em zero (0)
:::

```{r}
var cities = ['San Francisco', 'Los Angeles', 
              'New York', 'Atlanta'];
print(cities);

var cities1 = cities[1];
print(cities1);
```

![](img/gee_list.png){.absolute width=35% right=0 top=500}

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Introdução ao JavaScript

**Objetos**

::: {style="font-size: 70%;"}
- Armazenam **múltiplos valores** em uma única variável
- Permitem armazenamento de pares de **chave-valor**, cada valor é acessível por sua **chave** (nome), não por um índice numérico
- **Sintaxe**: palavra-chave `var`, nome da variável, igual, chaves `{}`, elementos nomeados pela chave entre aspas, dois pontos, valor atribuído e ponto e vírgula `;`
- **Camel Case**: primeira palavra em minúsculas, primeira letra da segunda palavra em maiúscula (API do *Earth Engine*)
- **Console**: impresso com chaves e rótulos, permitindo a recuperação pelos rótulos
:::

```{r}
var cityData = {
    'city': 'San Francisco',
    'coordinates': [-122.4194, 37.7749],
    'population': 873965
};
print(cityData);
```

![](img/gee_object.png){.absolute width=42% right=-50 top=505}

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

## Introdução ao JavaScript

**Funções**

::: {style="font-size: 80%;"}
- **Criadas** pelo usuário, realizam **cálculos** em entradas e **retornam** saídas modificadas
- Permitem agrupar **operações e repeti-las** para diferentes parâmetros, sem necessidade de reescrevê-las
- **Sintaxe**: definidas usando a palavra-chave `function`
- A mesma função pode ser chamada com **diferentes entradas** para gerar **diferentes saídas**
:::

```{r}
var greet = function(name) {
return 'Hello ' + name;
};
print(greet('World'));
print(greet('Readers'));
```

:::footer
[Cardille et al. (2024)](https://link.springer.com/book/10.1007/978-3-031-26588-4)
:::

# Client-side e server-side

## Cliente vs servidor{.smaller}

::: columns
::: {.column width="50%"}
**Client-side**

- Operações realizadas no **navegador** (*Editor de código* - API JS)
- Sintaxe e funções do JS, com requisições e alocamentos locais
- Manipulação de strings, números e programação (loops e controle de fluxo)

<center>
<img src="img/gee_client_side.png" style="width:100%"/>
</center>
:::

::: {.column width="50%"}
**Server-side**

- Operações realizadas nos **servidores da Google**
- Todas as funções começam com `ee.*`, com requisições aos servidores
- Manipulação de dados dos catálogos nos servidores

<center>
<img src="img/gee_server_side.png" style="width:100%"/>
</center>
:::
:::

:::footer
[Server-Side vs Client-Side Objects in Google Earth Engine](https://medium.com/@pulakeshpradhan/server-side-vs-client-side-objects-in-google-earth-engine-b45d119f72cf)
:::

## Cliente vs servidor    

- Ao usar as APIs do Earth Engine — JavaScript ou Python — você está construindo uma cadeia de comandos para enviar aos servidores do Google e depois receber o resultado de volta
- O código deve ser estruturado para enviar todo o trabalho pesado para o Google e manter o processamento fora dos recursos locais
- Em outras palavras, seu trabalho no Editor de Código é fazer uma descrição de uma computação. Todos os objetos ee são apenas marcadores de posição para objetos do lado do servidor — seu valor real não existe localmente em seu computador. 
- Para ver ou usar o valor real, ele precisa ser avaliado pelo servidor. Se você imprimir um objeto do Earth Engine, ele chamará getInfo para avaliar e retornar o valor. 
- Em contraste, você também pode trabalhar com listas ou números JavaScript/Python localmente e fazer coisas básicas de JavaScript/Python com eles, como somar números ou fazer loop sobre itens. 
- Esses são objetos do lado do cliente. Sempre que você traz um objeto do lado do servidor para seu ambiente local, há um custo computacional.

## Estrutura de um código no GEE

1. **Importar**: dados a partir do catálogo, seleção e pré-processamento (selecionar imagens com poucas nuvens em uma janela de tempo específica)
1. **Processar**: operações de processamento que resultam em produtos (índices, reduções...)
1. **Visualizar**: mapa dos dados e resultados (conferência das análises)
1. **Exportar**: dados obtidos do processamento enviados para o Google Drive (de onde baixados para uso num SIG)

:::footer
[Mapas Abertos](https://mapasabertos.com/2021/03/30/o-google-earth-engine/)
:::

# Material de estudo

## Sites e cursos

::: {style="font-size: 75%;"}
- [Welcome to Google Earth Engine](https://developers.google.com/earth-engine)
- [Earth Engine resources for workshops](https://developers.google.com/earth-engine/tutorials/ttt)
- [End-to-end Google Earth Engine](https://spatialthoughts.com/courses/google-earth-engine/)
- [Google Earth Engine for Water Resources Management](https://spatialthoughts.com/courses/gee-for-water-resources-management/)
- [Creating Publication Quality Charts with Google Earth Engine](https://spatialthoughts.com/courses/gee-charts/)
- [Earth Engine 101 - Introduction to the API](https://docs.google.com/document/d/1ZxRKMie8dfTvBmUNOO0TFMkd7ELGWf3WjX0JvESZdOE/edit?tab=t.0#heading=h.eyqkdl96og9i)
- [What is Google Earth Engine?](https://docs.google.com/presentation/d/1hT9q6kWigM1MM3p7IEcvNQlpPvkedW-lgCCrIqbNeis/edit#slide=id.p)
- [Beginner's Cookbook](https://developers.google.com/earth-engine/tutorials/community/beginners-cookbook)
:::

## Artigos e livros

::: {style="font-size: 75%;"}
- [Gorelick, N., Hancher, M., Dixon, M., Ilyushchenko, S., Thau, D., & Moore, R. (2017). Google Earth Engine: Planetary-scale geospatial analysis for everyone. Remote Sensing of Environment, 202, 18–27.](https://doi.org/10.1016/j.rse.2017.06.031)

- [Tamiminia, H., Salehi, B., Mahdianpari, M., Quackenbush, L., Adeli, S., & Brisco, B. (2020). Google Earth Engine for geo-big data applications: A meta-analysis and systematic review. ISPRS Journal of Photogrammetry and Remote Sensing, 164, 152–170.](https://doi.org/10.1016/j.isprsjprs.2020.04.001)

- [Velastegui-Montoya, A., Montalván-Burbano, N., Carrión-Mero, P., Rivera-Torres, H., Sadeck, L., & Adami, M. (2023). Google Earth Engine: A Global Analysis and Future Trends. Remote Sensing, 15(14), Artigo 14.](https://doi.org/10.3390/rs15143675)

- [Google Earth engine applications (with Kumar, L., & Mutanga, O.). (2019). MDPI.](https://www.mdpi.com/books/reprint/1262-google-earth-engine-applications)

- [Cardille, J. A., Crowley, M. A., Saah, D., & Clinton, N. E. (Orgs.). (2024). Cloud-Based Remote Sensing with Google Earth Engine: Fundamentals and Applications. Springer International Publishing.](https://doi.org/10.1007/978-3-031-26588-4)
:::

## Muito obrigado!

::: columns
::: {.column width="50%"}
**Acknowledgements**:

- Thiago Sanna
- Dhemerson Conciani
- Iago Mendes
- Yuri Silva

<center>
<img src="img/fapesp.png" style="width:70%"/>
</center>

:::

::: {.column width="50%"}
Contact:

[mauricio.vancine@gmail.com](mailto:mauricio.vancine@gmail.com)
[mauriciovancine.github.io](https://mauriciovancine.github.io)

<center>
<img src="img/gif_frogs.gif" style="width:75%"/>
</center>

:::
:::

:::footer
Slides by [Maurício Vancine](https://mauriciovancine.github.io/), made with [Quarto](https://quarto.org/). Code available at [GitHub](https://github.com/mauriciovancine/workshop-gee).
:::